!function(e){var o={};function t(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=o,t.d=function(e,o,n){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var r in e)t.d(n,r,function(o){return e[o]}.bind(null,r));return n},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=2)}([function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Sentido=void 0,function(e){e[e.abajo=0]="abajo",e[e.derecha=1]="derecha"}(o.Sentido||(o.Sentido={}))},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Coordenada=void 0;var n=t(0),r=function(){function e(e,o){this._x=e,this._y=o}return Object.defineProperty(e.prototype,"x",{get:function(){return this._x},set:function(e){this._x=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._y},set:function(e){this._x=e},enumerable:!1,configurable:!0}),e.prototype.equals=function(e){return this.x==e.x&&this.y==e.y},e.prototype.mover=function(e){e==n.Sentido.abajo?this.bajar():this.avanzar()},e.prototype.bajar=function(){this._y++},e.prototype.avanzar=function(){this._x++},e}();o.Coordenada=r},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),(new(t(10).Jugada)).play()},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Dimension=void 0;var n=function(){function e(e,o){this._altoD=e,this._anchoD=o}return Object.defineProperty(e.prototype,"altoD",{get:function(){return this._altoD},set:function(e){this._altoD=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"anchoD",{get:function(){return this._anchoD},set:function(e){this._anchoD=e},enumerable:!1,configurable:!0}),e}();o.Dimension=n},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Tablero=void 0;var n=t(5),r=t(9),i=function(){function e(e){this._tablero=new Array,this._barcosHundidos=0,this._dimension=e,this._flota=new n.Flota(this._dimension),this.crearTablero(),this.colocarBarcos()}return e.prototype.crearTablero=function(){for(var e=0;e<this._dimension.altoD;e++)this._tablero[e]=new Array(this._dimension.anchoD)},e.prototype.colocarBarcos=function(){console.log(this._flota.almacenDeBarcos);for(var e=this._flota.almacenDeBarcos,o=0;o<e.length;o++)for(var t=e[o].posiciones,n=0;n<t.length;n++){var r=t[n].coordenada.x,i=t[n].coordenada.y;this.tablero[i][r]=this._flota.almacenDeBarcos[o].posiciones[n]}},e.prototype.mostrarTablero=function(){var e="";e+="     ";for(var o=0;o<this._dimension.anchoD;o++)e+=o+1+"  |  ";e+="\n";for(var t=0;t<this._dimension.altoD;t++){e+=t+1+"  |   ";for(o=0;o<this._dimension.anchoD;o++)null!=this.tablero[t][o]?e+=this.pintarCasilla(this.tablero[t][o]):e+="X  |  ";e+="\n"}return e},e.prototype.pintarCasilla=function(e){return"W"==e?"W  |  ":e.estado==r.Estado.indemne?"B  |  ":e.estado==r.Estado.tocado?"T  |  ":"H  |  "},e.prototype.asignarEstadoCasilla=function(e){null==this.tablero[e.x][e.y]?(alert("agua"),this.tablero[e.x][e.y]="W"):this.tablero[e.x][e.y].estado==r.Estado.indemne&&(alert("tocado"),this.tablero[e.x][e.y].estado=r.Estado.tocado,this._barcosHundidos=this._flota.comprobarBarcoHundido(this._barcosHundidos))},e.prototype.comprobarFlotaTotalHundida=function(){return this._barcosHundidos==this._flota.almacenDeBarcos.length},Object.defineProperty(e.prototype,"flota",{get:function(){return this._flota},set:function(e){this._flota=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tablero",{get:function(){return this._tablero},set:function(e){this._tablero=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"dimension",{get:function(){return this._dimension},set:function(e){this._dimension=e},enumerable:!1,configurable:!0}),e}();o.Tablero=i},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Flota=void 0;var n=t(6),r=t(9),i=function(){function e(e){this._dimensiones=e,this._almacenDeBarcos=[],this._fabricaDeBarcos=new n.GeneradorFlota(this._dimensiones),this.generarFlota()}return e.prototype.generarFlota=function(){for(var e=[4,4,3,3,3,2,2,2,2],o=0;o<e.length;o++)this._almacenDeBarcos[o]=this._fabricaDeBarcos.crearBarco(e[o],this._almacenDeBarcos)},Object.defineProperty(e.prototype,"almacenDeBarcos",{get:function(){return this._almacenDeBarcos},set:function(e){this._almacenDeBarcos=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fabricaDeBarcos",{get:function(){return this._fabricaDeBarcos},set:function(e){this._fabricaDeBarcos=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"dimensiones",{get:function(){return this._dimensiones},set:function(e){this._dimensiones=e},enumerable:!1,configurable:!0}),e.prototype.comprobarBarcoHundido=function(e){for(var o=0,t=0;t<this.almacenDeBarcos.length;t++){o=0;for(var n=0;n<this.almacenDeBarcos[t].posiciones.length;n++)this.almacenDeBarcos[t].posiciones[n].estado==r.Estado.tocado&&++o==this.almacenDeBarcos[t].posiciones.length&&(alert("Hundido"),this.hundirBarco(this.almacenDeBarcos[t]),e++)}return e},e.prototype.hundirBarco=function(e){for(var o=0;o<e.posiciones.length;o++)e.posiciones[o].estado=r.Estado.hundido},e}();o.Flota=i},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.GeneradorFlota=void 0;var n=t(0),r=t(1),i=t(7),a=function(){function e(e){this._dimensiones=e}return e.prototype.dameNumeroAleatorioEntreMaxMin=function(e,o){return Math.floor(Math.random()*(e-o)+o)},e.prototype.dameSentidoAleatorio=function(){return 1==this.dameNumeroAleatorioEntreMaxMin(-1,2)?n.Sentido.derecha:n.Sentido.abajo},e.prototype.dameCoordenadaInical=function(e,o){do{var t=this.dameNumeroAleatorioEntreMaxMin(0,this._dimensiones.anchoD),n=this.dameNumeroAleatorioEntreMaxMin(0,this._dimensiones.altoD),i=new r.Coordenada(t,n)}while(!this.entraElBarcoEnLosLimites(e,i,o));return i},e.prototype.crearBarco=function(e,o){do{var t=this.dameSentidoAleatorio(),n=this.dameCoordenadaInical(e,t),r=new i.Barco(e,n,t)}while(this.exixteSolapamiento(r,o));return r},e.prototype.entraElBarcoEnLosLimites=function(e,o,t){var r=!0;return t==n.Sentido.abajo?e+o.y>this._dimensiones.altoD&&(r=!1):e+o.x>this._dimensiones.anchoD&&(r=!1),r},e.prototype.exixteSolapamiento=function(e,o){for(var t=0;t<o.length;t++)if(e.compruebaSolapamiento(o[t].posiciones))return!0;return!1},e}();o.GeneradorFlota=a},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Barco=void 0;var n=t(1),r=t(8),i=t(9),a=function(){function e(e,o,t){this._size=e,this._posiciones=[],this.crearBarco(o,t)}return e.prototype.crearBarco=function(e,o){for(var t=0;t<this.size;t++)this.posiciones.push(new r.Casilla(new n.Coordenada(e.x,e.y),i.Estado.indemne)),e.mover(o)},e.prototype.compruebaSolapamiento=function(e){for(var o=0;o<e.length;o++)for(var t=0;t<this._posiciones.length;t++)if(this.posiciones[t].coordenada.equals(e[o].coordenada))return!0;return!1},Object.defineProperty(e.prototype,"size",{get:function(){return this._size},set:function(e){this._size=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"posiciones",{get:function(){return this._posiciones},set:function(e){this._posiciones=e},enumerable:!1,configurable:!0}),e}();o.Barco=a},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Casilla=void 0;var n=function(){function e(e,o){this._coordenada=e,this._estado=o}return Object.defineProperty(e.prototype,"coordenada",{get:function(){return this._coordenada},set:function(e){this._coordenada=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"estado",{get:function(){return this._estado},set:function(e){this._estado=e},enumerable:!1,configurable:!0}),e}();o.Casilla=n},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Estado=void 0,function(e){e[e.tocado=0]="tocado",e[e.indemne=1]="indemne",e[e.hundido=2]="hundido"}(o.Estado||(o.Estado={}))},function(e,o,t){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Jugada=void 0;var n=t(3),r=t(4),i=t(1),a=function(){function e(){this._dimensiones=new n.Dimension(8,12),this._tablero=new r.Tablero(this._dimensiones)}return e.prototype.play=function(){alert("Hundir la flota\n El juego tiene un tablero de 8*12 y 9 barcos repartido por el tablero\n de diferentes tamaÃ±os"),console.log(this._tablero.tablero);do{alert(this._tablero.mostrarTablero()),this._tablero.asignarEstadoCasilla(this.SolicitarCoordenadaActuacion())}while(!this._tablero.comprobarFlotaTotalHundida());alert("Victoria, has hundido la flota")},e.prototype.SolicitarCoordenadaActuacion=function(){return new i.Coordenada(this.solicitarPuntoY(),this.solicitarPuntoX())},e.prototype.solicitarPuntoX=function(){do{var e=prompt("Dame el punto en ele eje X");""==e?e=0:e-=1}while(!this.comprobarCoordenada(e,this._dimensiones.anchoD));return e},e.prototype.solicitarPuntoY=function(){do{var e=prompt("Dame el punto en ele eje Y");""==e?e=0:e-=1}while(!this.comprobarCoordenada(e,this._dimensiones.altoD));return e},e.prototype.comprobarCoordenada=function(e,o){return e<o},e}();o.Jugada=a}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,