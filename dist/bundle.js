!function(t){var o={};function e(r){if(o[r])return o[r].exports;var n=o[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=t,e.c=o,e.d=function(t,o,r){e.o(t,o)||Object.defineProperty(t,o,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,o){if(1&o&&(t=e(t)),8&o)return t;if(4&o&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&o&&"string"!=typeof t)for(var n in t)e.d(r,n,function(o){return t[o]}.bind(null,n));return r},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p="",e(e.s=5)}([function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Coordenada=void 0;var r=e(3),n=function(){function t(t,o){this._x=t,this._y=o}return Object.defineProperty(t.prototype,"X",{get:function(){return this._x},set:function(t){this._x=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"Y",{get:function(){return this._y},set:function(t){this._y=t},enumerable:!1,configurable:!0}),t.prototype.equals=function(t){return this._x==t.X&&this._y==t.Y},t.prototype.mover=function(t){t==r.Sentido.ABAJO?this.bajar():this.avanzar()},t.prototype.bajar=function(){this._y++},t.prototype.avanzar=function(){this._x++},t}();o.Coordenada=n},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Estado=void 0,function(t){t[t.TOCADO=0]="TOCADO",t[t.INDEMNE=1]="INDEMNE",t[t.HUNDIDO=2]="HUNDIDO"}(o.Estado||(o.Estado={}))},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Dimensiones=void 0;var r=function(){function t(t,o){this._ancho=t,this._largo=o}return Object.defineProperty(t.prototype,"ancho",{get:function(){return this._ancho},set:function(t){this._ancho=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"largo",{get:function(){return this._largo},set:function(t){this._largo=t},enumerable:!1,configurable:!0}),t}();o.Dimensiones=r},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Sentido=void 0,function(t){t[t.ABAJO=0]="ABAJO",t[t.DERECHA=1]="DERECHA"}(o.Sentido||(o.Sentido={}))},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Flota=void 0;var r=e(8),n=e(1),a=function(){function t(t){this._medidas=t,this._flotaBarcos=[],this._generadorFlota=new r.GeneradorFlota(this._medidas),this.generarFlotas()}return t.prototype.generarFlotas=function(){for(var t=[4,4,3,3,3,2,2,2,2],o=0;o<t.length;o++){var e=this._generadorFlota.crearBarco(t[o]);this._flotaBarcos[o]=e}},t.prototype.comprobarBarcoHundido=function(t){for(var o,e=0;e<this._flotaBarcos.length;e++){o=0;for(var r=0;r<this.getLengthFlotaBarcos(e);r++)this.getPosicionBarco(e,r).status==n.Estado.TOCADO&&o++,o==this.getLengthFlotaBarcos(e)&&(alert("Hundido"),this.hundirBarco(this._flotaBarcos[e]),t++)}return t},t.prototype.getLengthFlotaBarcos=function(t){return this._flotaBarcos[t].posiciones.length},t.prototype.getPosicionBarco=function(t,o){return this._flotaBarcos[t].posiciones[o]},t.prototype.hundirBarco=function(t){for(var o=0;o<this.getCasillas(t).length;o++)this.getCasillas(t)[o].status=n.Estado.HUNDIDO},t.prototype.getCasillas=function(t){return t.posiciones},Object.defineProperty(t.prototype,"flotaBarcos",{get:function(){return this._flotaBarcos},enumerable:!1,configurable:!0}),t}();o.Flota=a},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=e(6),n=e(4),a=e(2),i=(new r.Juego,new n.Flota(new a.Dimensiones(8,12)));console.log(i.flotaBarcos)},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Juego=void 0;var r=e(2),n=e(0),a=e(7),i=function(){function t(){this._medidasTablero=new r.Dimensiones(8,12),this._tablero=new a.Tablero(this._medidasTablero)}return t.prototype.play=function(){alert("Vienvenido al  Hundir la FLota el juego se desarrolla\n en un tablero de 8x12 y contamos con \n 2 barcos de 4 casillas 3 barcos de 3 casillas y 4 barcos de 2 casillas\n espero que lo disfrutes");do{alert(this._tablero.mostrarTablero()),this._tablero.tratarCasilla(this.SolicitarCoordenadaActuacion())}while(!this._tablero.hundidaTotaFlota());alert("Enhorabuena has ganado y seguro que habra muerto mucha gente eran cruceros por el mediterraneo")},t.prototype.SolicitarCoordenadaActuacion=function(){return new n.Coordenada(this.solicitarPuntoX(),this.solicitarPuntoY())},t.prototype.solicitarPuntoX=function(){do{var t=prompt("Dame el punto en ele eje X");null==t&&(t=0)}while(!this.comprobarCoordenada(t,this._medidasTablero.ancho));return t-1},t.prototype.solicitarPuntoY=function(){do{var t=prompt("Dame el punto en ele eje Y");null==t&&(t=0)}while(!this.comprobarCoordenada(t,this._medidasTablero.largo));return t-1},t.prototype.comprobarCoordenada=function(t,o){return t<o},t}();o.Juego=i},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Tablero=void 0;var r=e(4),n=e(1),a=function(){function t(t){this._numeroBarcosHundidos=0,this._tablero=new Array,this._medidasTablero=t,this._flota=new r.Flota(this._medidasTablero),this.generarTablero()}return t.prototype.generarTablero=function(){this.crearTablero(),this.ColocarFlota()},t.prototype.crearTablero=function(){for(var t=0;t<this._medidasTablero.ancho;t++)this._tablero[t]=new Array(this._medidasTablero.largo)},t.prototype.ColocarFlota=function(){for(var t=0;t<this.getFlotaCompleta().length;t++)for(var o=0;o<this.getFlotaBarco(t).posiciones.length;o++)this.insertarFlota(this.getFlotaBarco(t).posiciones[o].coordenada,this.getFlotaBarco(t).posiciones[o])},t.prototype.insertarFlota=function(t,o){var e=t.X,r=t.Y;this._tablero[e][r]=o},t.prototype.hundidaTotaFlota=function(){return this.numeroBarcosHundidos==this._flota.flotaBarcos.length},t.prototype.mostrarTablero=function(){var t="";t+="     ";for(var o=0;o<this._medidasTablero.largo;o++)t+=o+1+"  |  ";t+="\n";for(var e=0;e<this._medidasTablero.ancho;e++){t+=e+1+"  |   ";for(o=0;o<this._medidasTablero.largo;o++)null!=this.tablero[e][o]?t+=this.tratarCasillaMarcada(this.tablero[e][o]):t+="X  |  ";t+="\n"}return t},t.prototype.tratarCasillaMarcada=function(t){return"W"==t?"W  |  ":t.status==n.Estado.INDEMNE?"X  |  ":t.status==n.Estado.TOCADO?"T  |  ":"H  |  "},t.prototype.tratarCasilla=function(t){null==this.tablero[t.X][t.Y]?(this.tablero[t.X][t.Y]="W",alert("Agua")):this.tablero[t.X][t.Y].status==n.Estado.INDEMNE&&(this.tablero[t.X][t.Y].status=n.Estado.TOCADO,alert("Tocado"),this.numeroBarcosHundidos=this._flota.comprobarBarcoHundido(this._numeroBarcosHundidos))},Object.defineProperty(t.prototype,"tablero",{get:function(){return this._tablero},enumerable:!1,configurable:!0}),t.prototype.getFlotaCompleta=function(){return this._flota.flotaBarcos},t.prototype.getFlotaBarco=function(t){return this._flota.flotaBarcos[t]},Object.defineProperty(t.prototype,"numeroBarcosHundidos",{get:function(){return this._numeroBarcosHundidos},set:function(t){this._numeroBarcosHundidos=t},enumerable:!1,configurable:!0}),t}();o.Tablero=a},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.GeneradorFlota=void 0;var r=e(9),n=e(3),a=e(0),i=function(){function t(t){this._medida=t}return t.prototype.dameNumeroEntreMaximoMinimo=function(t,o){return Math.floor(Math.random()*(t-o)+o)},t.prototype.dameSentidoAleatorio=function(){return 1==this.dameNumeroEntreMaximoMinimo(-1,2)?n.Sentido.DERECHA:n.Sentido.ABAJO},t.prototype.crearBarco=function(t){do{var o=this.dameSentidoAleatorio(),e=this.coordenadaIncial()}while(this.salidaPorLimites(e,t,o));return new r.Barco(t,e,o)},t.prototype.coordenadaIncial=function(){var t=this.dameNumeroEntreMaximoMinimo(0,this._medida.ancho),o=this.dameNumeroEntreMaximoMinimo(0,this._medida.largo);return new a.Coordenada(t,o)},t.prototype.salidaPorLimites=function(t,o,e){var r=!1;return e==n.Sentido.ABAJO?o+t.Y>this._medida.largo&&(r=!0):o+t.X>this._medida.ancho&&(r=!0),r},t}();o.GeneradorFlota=i},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Barco=void 0;var r=e(10),n=e(0),a=e(1),i=function(){function t(t,o,e){this._size=t,this._posiciones=[],this.crearBarco(o,e)}return t.prototype.crearBarco=function(t,o){for(var e=0;e<this._size;e++)this._posiciones.push(new r.Casilla(a.Estado.INDEMNE,new n.Coordenada(t.X,t.Y))),t.mover(o)},t.prototype.getCoordenadaBarco=function(t){return this.posiciones[t].coordenada},Object.defineProperty(t.prototype,"posiciones",{get:function(){return this._posiciones},enumerable:!1,configurable:!0}),t}();o.Barco=i},function(t,o,e){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.Casilla=void 0;var r=function(){function t(t,o){this._status=t,this._coordenada=o}return Object.defineProperty(t.prototype,"status",{get:function(){return this._status},set:function(t){this._status=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"coordenada",{get:function(){return this._coordenada},set:function(t){this._coordenada=t},enumerable:!1,configurable:!0}),t}();o.Casilla=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,